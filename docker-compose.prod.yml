version: "3.6"

services:
  redis:
    image: redis:alpine
    # ports:
    #   - 6379:6379
    networks:
      - app-network

  mongo:
    image: mongo
    restart: always
    # ports:
    #   - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - app-network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    networks:
      - app-network

  postgres:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: casbin
      POSTGRES_PASSWORD: casbin
      POSTGRES_DB: casbin
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: ["postgres", "-c", "log_statement=all"]
    networks:
      - app-network
    
  adminer:
    image: adminer
    restart: unless-stopped
    #ports:
    #  - 8080:8080
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.graphql-adminer.rule=Host(`adminer.graphql.simoneromano.eu`)"
      - "traefik.http.routers.graphql-adminer.entrypoints=websecure"
      - "traefik.http.routers.graphql-adminer.tls=true"
      - "traefik.http.routers.graphql-adminer.tls.certresolver=leresolver"
      # Expose right ports
      - "traefik.http.services.graphql-adminer.loadbalancer.server.port=8080"
    networks:
      - proxy
      - app-network

  acpm-service:
    image: ghcr.io/simoneromano96/federation-graphql-rust/acpm-service
    restart: unless-stopped
    environment: 
      APP_DATABASE_URL: "postgres://casbin:casbin@postgres:5432/casbin"
      APP_DATABASE_POOLSIZE: 16
      APP_SERVER_PORT: 80
      APP_DEBUG: "true"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.acpm-service.rule=Host(`acpm.graphql.simoneromano.eu`)"
      - "traefik.http.routers.acpm-service.entrypoints=websecure"
      - "traefik.http.routers.acpm-service.tls=true"
      - "traefik.http.routers.acpm-service.tls.certresolver=leresolver"
      # Expose right ports
      - "traefik.http.services.acpm-service.loadbalancer.server.port=80"
    #ports: 
    #  - 3999:80
    depends_on: 
      - postgres
    networks:
      - proxy
      - app-network

  graphql-gateway:
    image: ghcr.io/simoneromano96/federation-graphql-rust/graphql-gateway
    restart: unless-stopped
    environment: 
      PORT: 80
      IDENTITY_SERVICE_URL: "https://identity.graphql.simoneromano.eu/graphql"
      PRODUCTS_SERVICE_URL: "https://products.graphql.simoneromano.eu/graphql"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.graphql-gateway.rule=Host(`gateway.graphql.simoneromano.eu`)"
      - "traefik.http.routers.graphql-gateway.entrypoints=websecure"
      - "traefik.http.routers.graphql-gateway.tls=true"
      - "traefik.http.routers.graphql-gateway.tls.certresolver=leresolver"
      # Expose right ports
      - "traefik.http.services.graphql-gateway.loadbalancer.server.port=80"
    #ports: 
    #  - 4000:80
    depends_on: 
      - identity-service
      - products-service
    networks:
      - proxy
      - app-network

  identity-service:
    image: ghcr.io/simoneromano96/federation-graphql-rust/identity-service
    restart: unless-stopped
    environment: 
      APP_DEBUG: "true"
      APP_DATABASE_URL: "mongodb://root:example@mongo:27017/admin"
      APP_SERVER_PORT: 80
      APP_REDIS_URL: "redis:6379"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.identity-service.rule=Host(`identity.graphql.simoneromano.eu`)"
      - "traefik.http.routers.identity-service.entrypoints=websecure"
      - "traefik.http.routers.identity-service.tls=true"
      - "traefik.http.routers.identity-service.tls.certresolver=leresolver"
      # Expose right ports
      - "traefik.http.services.identity-service.loadbalancer.server.port=80"
    #ports: 
    #  - 4001:80
    depends_on: 
      - redis
      - mongo
    networks:
      - proxy
      - app-network

  products-service:
    image: ghcr.io/simoneromano96/federation-graphql-rust/products-service
    restart: unless-stopped
    environment: 
      APP_DEBUG: "true"
      APP_REDIS_URL: "redis:6379"
      APP_DATABASE_URL: "mongodb://root:example@mongo:27017/admin"
      APP_SERVER_PORT: 80
      APP_AUTHORIZATION_SKIP: "true"
      APP_AUTHORIZATION_URL: "https://acpm.graphql.simoneromano.eu/api/v1/authorization/is-authorized"
      APP_AUTHORIZATION_AUTH_USERNAME: "products-service"
      APP_AUTHORIZATION_AUTH_PASSWORD: "password"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.products-service.rule=Host(`products.graphql.simoneromano.eu`)"
      - "traefik.http.routers.products-service.entrypoints=websecure"
      - "traefik.http.routers.products-service.tls=true"
      - "traefik.http.routers.products-service.tls.certresolver=leresolver"
      # Expose right ports
      - "traefik.http.services.products-service.loadbalancer.server.port=80"
    #ports: 
    #  - 4002:80
    depends_on: 
      - acpm-service
      - redis
      - mongo
    networks:
      - proxy
      - app-network

  #subscription-service:
  #  image: ghcr.io/simoneromano96/federation-graphql-rust/subscription-service
  #  restart: unless-stopped
  #  environment: 
  #    APP_DATABASE_URL: mongodb://root:example@mongo:27017/admin
  #    APP_SERVER_PORT: 80
  #  ports: 
  #    - 4003:80

networks:
  app-network:
  proxy:
    external: true

volumes:
  postgres_data:
